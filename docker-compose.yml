version: "3.8"

services:
  # API gateway – expose this port via Coolify/UFW (see docs §8)
  kong:
    image: kong:2.8.1
    ports:
      - "${KONG_HOST_PORT:-4269}:8000"
    volumes:
      - ./kong.yml:/home/kong/kong.yaml:ro
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /home/kong/kong.yaml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl,basic-auth
    command: "kong docker-start"

  db:
    image: supabase/postgres:15.1.0.11
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}

  auth:
    image: supabase/gotrue:v2.176.1
    depends_on:
      - db
    environment:
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/postgres
      GOTRUE_JWT_SECRET: ${JWT_SECRET}
      GOTRUE_SITE_URL: ${SITE_URL}
      API_EXTERNAL_URL: http://kong:8000

  rest:
    # Use the official PostgREST image – identical binary but available on Docker Hub
    image: postgrest/postgrest:v11.2.2
    depends_on:
      - db
    environment:
      PGRST_DB_URI: postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/postgres
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: ${JWT_SECRET}

  storage:
    # Pull from GitHub Container Registry – public, no auth required
    image: ghcr.io/supabase/storage-api:v1.24.7
    depends_on:
      - db
      - rest
    environment:
      POSTGRES_URL: postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/postgres
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/postgres
      PGRST_JWT_SECRET: ${JWT_SECRET}
      ANON_KEY: ${ANON_KEY}
      SERVICE_KEY: ${SERVICE_ROLE_KEY}
      FILE_SIZE_LIMIT: "50Mi"
      STORAGE_BACKEND: "file"
      REGION: "local"

  realtime:
    image: supabase/realtime:v2.24.1
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: postgres
      JWT_SECRET: ${JWT_SECRET}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      APP_NAME: realtime

  studio:
    image: supabase/studio:latest
    depends_on:
      - rest
    ports:
      - "${STUDIO_HOST_PORT:-4369}:3000"
    environment:
      STUDIO_PG_META_URL: http://rest:3000
      SUPABASE_URL: http://kong:8000
      SUPABASE_ANON_KEY: ${ANON_KEY}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DASHBOARD_USERNAME: ${DASHBOARD_USERNAME}
      DASHBOARD_PASSWORD: ${DASHBOARD_PASSWORD}

  # Optional OCR micro-service – disabled by default.
  # Uncomment to enable and adjust as needed.
  # ocr:
  #   image: ghcr.io/koyeb/prisma-ocr:latest
  #   ports:
  #     - "7000:7000"
  #   volumes:
  #     - ocr-data:/data
  #   environment:
  #     LOG_LEVEL: info

volumes:
  db-data:
  # ocr-data:
